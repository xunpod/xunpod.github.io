<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>WebStorm个人配置指南</title>
    <link href="/2022/08/27/WebStorm%E4%B8%AA%E4%BA%BA%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/"/>
    <url>/2022/08/27/WebStorm%E4%B8%AA%E4%BA%BA%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>CLion个人配置指南</title>
    <link href="/2022/08/27/CLion%E4%B8%AA%E4%BA%BA%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/"/>
    <url>/2022/08/27/CLion%E4%B8%AA%E4%BA%BA%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Goland个人配置指南</title>
    <link href="/2022/08/27/Goland%E4%B8%AA%E4%BA%BA%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/"/>
    <url>/2022/08/27/Goland%E4%B8%AA%E4%BA%BA%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Pycharm个人配置指南</title>
    <link href="/2022/08/27/Pycharm%E4%B8%AA%E4%BA%BA%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/"/>
    <url>/2022/08/27/Pycharm%E4%B8%AA%E4%BA%BA%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<h1 id="Pycharm个人配置指南"><a href="#Pycharm个人配置指南" class="headerlink" title="Pycharm个人配置指南"></a><center>Pycharm个人配置指南</h1><h2 id="1-外观与行为"><a href="#1-外观与行为" class="headerlink" title="1.外观与行为"></a>1.外观与行为</h2><h3 id="1-1-外观"><a href="#1-1-外观" class="headerlink" title="1.1 外观"></a>1.1 外观</h3><h4 id="1-1-1-主题：One-Dark"><a href="#1-1-1-主题：One-Dark" class="headerlink" title="1.1.1 主题：One Dark"></a>1.1.1 主题：One Dark</h4><h4 id="1-1-2-UI选项"><a href="#1-1-2-UI选项" class="headerlink" title="1.1.2 UI选项"></a>1.1.2 UI选项</h4><p>1</p><h2 id="2-按键映射"><a href="#2-按键映射" class="headerlink" title="2.按键映射"></a>2.按键映射</h2><h2 id="3-编辑器"><a href="#3-编辑器" class="headerlink" title="3.编辑器"></a>3.编辑器</h2><h2 id="4-插件"><a href="#4-插件" class="headerlink" title="4.插件"></a>4.插件</h2><h3 id="4-1-主题"><a href="#4-1-主题" class="headerlink" title="4.1 主题"></a>4.1 主题</h3><p>Material Theme UI</p><p>One Dark theme</p><h3 id="4-2-功能插件"><a href="#4-2-功能插件" class="headerlink" title="4.2 功能插件"></a>4.2 功能插件</h3><p>4.2.1快捷键KeyMap</p><p>vscode</p><h2 id="5-版本控制"><a href="#5-版本控制" class="headerlink" title="5.版本控制"></a>5.版本控制</h2><h2 id="6-构建、执行、部署"><a href="#6-构建、执行、部署" class="headerlink" title="6.构建、执行、部署"></a>6.构建、执行、部署</h2><h2 id="7-语言和框架"><a href="#7-语言和框架" class="headerlink" title="7.语言和框架"></a>7.语言和框架</h2><h2 id="8-高级设置"><a href="#8-高级设置" class="headerlink" title="8.高级设置"></a>8.高级设置</h2><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>1.项目路径名不能有中文，否则无法自动启动venv环境</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>curl命令用法</title>
    <link href="/2022/08/27/curl%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95/"/>
    <url>/2022/08/27/curl%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>wget命令用法</title>
    <link href="/2022/08/27/wget%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95/"/>
    <url>/2022/08/27/wget%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>配置KubuntuDesktop开发环境</title>
    <link href="/2022/02/27/%E9%85%8D%E7%BD%AEUbuntuDesktop%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <url>/2022/02/27/%E9%85%8D%E7%BD%AEUbuntuDesktop%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</url>
    
    <content type="html"><![CDATA[<h1 id="配置KubuntuDesktop开发环境"><a href="#配置KubuntuDesktop开发环境" class="headerlink" title="配置KubuntuDesktop开发环境"></a><center>配置KubuntuDesktop开发环境</h1><h2 id="1-系统介绍"><a href="#1-系统介绍" class="headerlink" title="1.系统介绍"></a>1.系统介绍</h2><p>​Ubuntu20.04.4 KDE amd64</p><h3 id="1-1-Ubuntu"><a href="#1-1-Ubuntu" class="headerlink" title="1.1 Ubuntu"></a>1.1 Ubuntu</h3><h3 id="1-2-KDE桌面"><a href="#1-2-KDE桌面" class="headerlink" title="1.2 KDE桌面"></a>1.2 KDE桌面</h3><h2 id="2-基础环境"><a href="#2-基础环境" class="headerlink" title="2.基础环境"></a>2.基础环境</h2><h3 id="2-1-初始化环境"><a href="#2-1-初始化环境" class="headerlink" title="2.1 初始化环境"></a>2.1 初始化环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> ~/code<br>mdkir ~/app<br><span class="hljs-built_in">mkdir</span> ~/.ssh<br></code></pre></td></tr></table></figure><h3 id="2-2-设置软件源"><a href="#2-2-设置软件源" class="headerlink" title="2.2 设置软件源"></a>2.2 设置软件源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> /etc/apt/sources.list /etc/apt/sources.list.bak<br><span class="hljs-built_in">rm</span> /etc/apt/sources.list<br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;# 中科大源\ndeb https://mirrors.ustc.edu.cn/ubuntu/ focal main restricted universe multiverse \ndeb https://mirrors.ustc.edu.cn/ubuntu/ focal-updates main restricted universe multiverse \ndeb https://mirrors.ustc.edu.cn/ubuntu/ focal-backports main restricted universe multiverse \ndeb https://mirrors.ustc.edu.cn/ubuntu/ focal-security main restricted universe multiverse&quot;</span> &gt;&gt; /etc/apt/sources.list<br>apt update &amp;&amp; apt upgrade -y<br></code></pre></td></tr></table></figure><h3 id="2-2-设置时间"><a href="#2-2-设置时间" class="headerlink" title="2.2 设置时间"></a>2.2 设置时间</h3><h4 id="2-2-1-设置时区"><a href="#2-2-1-设置时区" class="headerlink" title="2.2.1 设置时区"></a>2.2.1 设置时区</h4><ul><li>方法一</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">cp</span> /usr/share/zoneinfo/Asia/Shanghai /etc/localtime<br></code></pre></td></tr></table></figure><ul><li>方法二</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">timedatectl set-timezone Asia/Shanghai<br></code></pre></td></tr></table></figure><h4 id="2-2-2-校正时间"><a href="#2-2-2-校正时间" class="headerlink" title="2.2.2 校正时间"></a>2.2.2 校正时间</h4><ul><li><strong>安装ntpdate</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install ntpdate<br></code></pre></td></tr></table></figure><ul><li><strong>校正时间</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ntpdate cn.pool.ntp.org<br></code></pre></td></tr></table></figure><ul><li><strong>将系统时间写入硬件时间</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo hwclock --systohc<br></code></pre></td></tr></table></figure><h3 id="2-3-配置代理"><a href="#2-3-配置代理" class="headerlink" title="2.3 配置代理"></a>2.3 配置代理</h3><h4 id="2-3-1-安装Clash-For-Windows"><a href="#2-3-1-安装Clash-For-Windows" class="headerlink" title="2.3.1 安装Clash.For.Windows"></a>2.3.1 安装Clash.For.Windows</h4><ul><li>下载安装包</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget -O clash.tar.gz<br>https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/Fndroid/</span>clash_for_windows_pkg<span class="hljs-regexp">/releases/</span>download<span class="hljs-regexp">/0.19.28/</span>Clash.<span class="hljs-keyword">for</span>.Windows-<span class="hljs-number">0.19</span>.<span class="hljs-number">28</span>-x64-linux.tar.gz<br>tar -zvef clash.tar.gz<br>mv <br>mkdir -p ~<span class="hljs-regexp">/app/</span>clash<br><br><br></code></pre></td></tr></table></figure><ul><li>下载Country.mmdb和config.yaml</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget -P ~<span class="hljs-regexp">/app/</span>clash -O Country.mmdb https:<span class="hljs-regexp">//</span>www.sub-speeder.com<span class="hljs-regexp">/client-download/</span>Country.mmdb<br>wget -P ~<span class="hljs-regexp">/app/</span>clash -O config.yaml <br></code></pre></td></tr></table></figure><h4 id="2-3-2-终端代理"><a href="#2-3-2-终端代理" class="headerlink" title="2.3.2 终端代理"></a>2.3.2 终端代理</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># proxy bash</span><br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;export http_proxy=&quot;</span>http://127.0.0.1:7890<span class="hljs-string">&quot; \nexport https_proxy=&quot;</span>https://127.0.0.1:7890/<span class="hljs-string">&quot;&quot;</span> &gt;&gt; ~/.bashrc<br><span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure><h4 id="2-3-3-Git代理"><a href="#2-3-3-Git代理" class="headerlink" title="2.3.3 Git代理"></a>2.3.3 Git代理</h4><ul><li>全局代理</li></ul><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs tcl"><span class="hljs-comment"># git全局代理</span><br>git config --<span class="hljs-keyword">global</span> <span class="hljs-keyword">http</span>.proxy <span class="hljs-keyword">http</span>://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>:<span class="hljs-number">7890</span><br>git config --<span class="hljs-keyword">global</span> https.proxy https://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>:<span class="hljs-number">7890</span><br><span class="hljs-comment"># 取消代理</span><br>git config --<span class="hljs-keyword">global</span> --<span class="hljs-keyword">unset</span>  <span class="hljs-keyword">http</span>.proxy  <br>git config --<span class="hljs-keyword">global</span> --<span class="hljs-keyword">unset</span>  https.proxy <br><span class="hljs-comment"># 对github设置代理</span><br>git config --<span class="hljs-keyword">global</span> <span class="hljs-keyword">http</span>.https://github.com.proxy <span class="hljs-keyword">http</span>://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>:<span class="hljs-number">7890</span><br></code></pre></td></tr></table></figure><ul><li>Github加速</li></ul><h4 id="2-3-4-Curl代理"><a href="#2-3-4-Curl代理" class="headerlink" title="2.3.4 Curl代理"></a>2.3.4 Curl代理</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;proxy=&quot;</span>http://127.0.0.1:7890/<span class="hljs-string">&quot;&quot;</span> &gt;&gt; ~/.curlrc<br><span class="hljs-built_in">source</span> ~/.curlrc<br></code></pre></td></tr></table></figure><h4 id="2-3-5-Go代理"><a href="#2-3-5-Go代理" class="headerlink" title="2.3.5 Go代理"></a>2.3.5 Go代理</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 配置 GOPROXY 环境变量</span><br><span class="hljs-built_in">export</span> GOPROXY=https://goproxy.io,direct<br><span class="hljs-comment"># 还可以设置不走 proxy 的私有仓库或组，多个用逗号相隔（可选）</span><br><span class="hljs-built_in">export</span> GOPRIVATE=git.mycompany.com,github.com/my/private<br></code></pre></td></tr></table></figure><h4 id="2-3-6-Snap代理"><a href="#2-3-6-Snap代理" class="headerlink" title="2.3.6 Snap代理"></a>2.3.6 Snap代理</h4><h4 id="2-3-7-DockHub代理"><a href="#2-3-7-DockHub代理" class="headerlink" title="2.3.7 DockHub代理"></a>2.3.7 DockHub代理</h4><h3 id="2-4-字体"><a href="#2-4-字体" class="headerlink" title="2.4 字体"></a>2.4 字体</h3><ul><li>Firacode</li><li></li></ul><h2 id="3-运行环境"><a href="#3-运行环境" class="headerlink" title="3.运行环境"></a>3.运行环境</h2><h3 id="3-1-初始化环境"><a href="#3-1-初始化环境" class="headerlink" title="3.1 初始化环境"></a>3.1 初始化环境</h3><ul><li><strong>基础软件</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install -y openssh-server vim gcc g++ cmake curl git wget unzip ntpdate apt-transport-https ca-certificates software-properties-common gnome-keyring socket<br></code></pre></td></tr></table></figure><ul><li><strong>常用运行库</strong></li></ul><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">sudo apt install -<span class="hljs-keyword">y</span> openjdk-<span class="hljs-number">8</span>-jre-headless python2.<span class="hljs-number">7</span> <span class="hljs-keyword">python3</span> <span class="hljs-keyword">python3</span>-pip <span class="hljs-keyword">python</span>-<span class="hljs-keyword">is</span>-<span class="hljs-keyword">python3</span> <span class="hljs-keyword">ruby</span> sqlite3 mysql-server<br></code></pre></td></tr></table></figure><ul><li><strong>扩展运行库</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install -y htop m4 ruby gfortran build-essential subversion perl mpich libblas-dev liblapack-dev libatlas-base-dev libpng-dev libtiff-dev libjpeg-dev libfftw3-dev automake autoconf libtool libnetcdf-dev pnetcdf-bin atool libxv-dev ncurses-dev libncurses5-dev python3-ck cme cde ack antlr3 asciidoc autopoint binutils bison bzip2 ccache cpio  device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib  gperf haveged help2man intltool libc6-dev-i386 libelf-dev  libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncursesw5-dev libreadline-dev libssl-dev lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf  qemu-utils rsync scons squashfs-tools swig texinfo uglifyjs upx-ucl xmlto xxd zlib1g-dev <br></code></pre></td></tr></table></figure><h3 id="3-2-Node-js"><a href="#3-2-Node-js" class="headerlink" title="3.2 Node.js"></a>3.2 Node.js</h3><h4 id="3-2-1-安装"><a href="#3-2-1-安装" class="headerlink" title="3.2.1 安装"></a>3.2.1 安装</h4><p><strong>Node.js v18.x</strong>:</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim">curl -fsSL https://<span class="hljs-keyword">deb</span>.nodesource.<span class="hljs-keyword">com</span>/setup_18.<span class="hljs-keyword">x</span> | sudo -E bash -<br>sudo apt-<span class="hljs-built_in">get</span> install -<span class="hljs-keyword">y</span> nodejs<br></code></pre></td></tr></table></figure><p><strong>Node.js v16.x</strong>:</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs vim"># Using Ubuntu<br>curl -fsSL https://<span class="hljs-keyword">deb</span>.nodesource.<span class="hljs-keyword">com</span>/setup_16.<span class="hljs-keyword">x</span> | sudo -E bash -<br>sudo apt-<span class="hljs-built_in">get</span> install -<span class="hljs-keyword">y</span> nodejs<br><br># Using Debian, <span class="hljs-keyword">as</span> root<br>curl -fsSL https://<span class="hljs-keyword">deb</span>.nodesource.<span class="hljs-keyword">com</span>/setup_16.<span class="hljs-keyword">x</span> | bash -<br>apt-<span class="hljs-built_in">get</span> install -<span class="hljs-keyword">y</span> nodejs<br></code></pre></td></tr></table></figure><p><strong>Node.js v14.x</strong>:</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs vim"># Using Ubuntu<br>curl -fsSL https://<span class="hljs-keyword">deb</span>.nodesource.<span class="hljs-keyword">com</span>/setup_14.<span class="hljs-keyword">x</span> | sudo -E bash -<br>sudo apt-<span class="hljs-built_in">get</span> install -<span class="hljs-keyword">y</span> nodejs<br><br># Using Debian, <span class="hljs-keyword">as</span> root<br>curl -fsSL https://<span class="hljs-keyword">deb</span>.nodesource.<span class="hljs-keyword">com</span>/setup_14.<span class="hljs-keyword">x</span> | bash -<br>apt-<span class="hljs-built_in">get</span> install -<span class="hljs-keyword">y</span> nodejs<br></code></pre></td></tr></table></figure><p><strong>Node.js LTS (v16.x)</strong>:</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs vim"># Using Ubuntu<br>curl -fsSL https://<span class="hljs-keyword">deb</span>.nodesource.<span class="hljs-keyword">com</span>/setup_lts.<span class="hljs-keyword">x</span> | sudo -E bash -<br>sudo apt-<span class="hljs-built_in">get</span> install -<span class="hljs-keyword">y</span> nodejs<br><br># Using Debian, <span class="hljs-keyword">as</span> root<br>curl -fsSL https://<span class="hljs-keyword">deb</span>.nodesource.<span class="hljs-keyword">com</span>/setup_lts.<span class="hljs-keyword">x</span> | bash -<br>apt-<span class="hljs-built_in">get</span> install -<span class="hljs-keyword">y</span> nodejs<br></code></pre></td></tr></table></figure><p><strong>Node.js Current (v18.x)</strong>:</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs vim"># Using Ubuntu<br>curl -fsSL https://<span class="hljs-keyword">deb</span>.nodesource.<span class="hljs-keyword">com</span>/setup_current.<span class="hljs-keyword">x</span> | sudo -E bash -<br>sudo apt-<span class="hljs-built_in">get</span> install -<span class="hljs-keyword">y</span> nodejs<br><br># Using Debian, <span class="hljs-keyword">as</span> root<br>curl -fsSL https://<span class="hljs-keyword">deb</span>.nodesource.<span class="hljs-keyword">com</span>/setup_current.<span class="hljs-keyword">x</span> | bash -<br>apt-<span class="hljs-built_in">get</span> install -<span class="hljs-keyword">y</span> nodejs<br></code></pre></td></tr></table></figure><p><em><strong>Optional</strong></em>: install build tools</p><p>To compile and install native addons from npm you may also need to install build tools:</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dart"># use `sudo` <span class="hljs-keyword">on</span> Ubuntu or run <span class="hljs-keyword">this</span> <span class="hljs-keyword">as</span> root <span class="hljs-keyword">on</span> debian<br>apt-<span class="hljs-keyword">get</span> install -y build-essential<br></code></pre></td></tr></table></figure><h4 id="3-2-2-卸载"><a href="#3-2-2-卸载" class="headerlink" title="3.2.2 卸载"></a>3.2.2 卸载</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo apt-get purge nodejs<br>sudo rm -r <span class="hljs-regexp">/etc/</span>apt<span class="hljs-regexp">/sources.list.d/</span>nodesource.list<br></code></pre></td></tr></table></figure><h4 id="3-2-2-配置npm源"><a href="#3-2-2-配置npm源" class="headerlink" title="3.2.2 配置npm源"></a>3.2.2 配置npm源</h4><h3 id="3-3-Python"><a href="#3-3-Python" class="headerlink" title="3.3 Python"></a>3.3 Python</h3><h4 id="3-3-1-包管理器"><a href="#3-3-1-包管理器" class="headerlink" title="3.3.1 包管理器"></a>3.3.1 包管理器</h4><ul><li>安装</li></ul><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">sudo apt install -<span class="hljs-keyword">y</span> <span class="hljs-keyword">python3</span> <span class="hljs-keyword">python3</span>-pip3<br></code></pre></td></tr></table></figure><ul><li>卸载</li></ul><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">sudo apt <span class="hljs-built_in">remove</span> -<span class="hljs-keyword">y</span> <span class="hljs-keyword">python3</span> <span class="hljs-keyword">python3</span>-pip3<br></code></pre></td></tr></table></figure><h4 id="3-3-2-编译安装"><a href="#3-3-2-编译安装" class="headerlink" title="3.3.2 编译安装"></a>3.3.2 编译安装</h4><ul><li>安装</li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">wget</span> https://www.python.org/ftp/python/<span class="hljs-number">3</span>.<span class="hljs-number">10</span>.<span class="hljs-number">5</span>/Python-<span class="hljs-number">3</span>.<span class="hljs-number">10</span>.<span class="hljs-number">5</span>.tar.xz<br><br></code></pre></td></tr></table></figure><ul><li>卸载</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><h4 id="3-3-3-配置环境变量"><a href="#3-3-3-配置环境变量" class="headerlink" title="3.3.3 配置环境变量"></a>3.3.3 配置环境变量</h4><h3 id="3-4-OpenJDK"><a href="#3-4-OpenJDK" class="headerlink" title="3.4 OpenJDK"></a>3.4 OpenJDK</h3><h4 id="3-4-1-JDK-8"><a href="#3-4-1-JDK-8" class="headerlink" title="3.4.1 JDK 8"></a>3.4.1 JDK 8</h4><ul><li>安装</li></ul><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">apt <span class="hljs-keyword">install </span>openjdk<span class="hljs-number">-8</span>-<span class="hljs-keyword">jdk-headless</span><br><span class="hljs-keyword"></span>apt <span class="hljs-keyword">install </span>openjdk<span class="hljs-number">-8</span>-<span class="hljs-keyword">jre-headless</span><br></code></pre></td></tr></table></figure><ul><li>卸载</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">apt <span class="hljs-built_in">remove</span> -y openjdk-8-jdk-headless<br>apt <span class="hljs-built_in">remove</span> -y openjdk-8-jre-headless<br></code></pre></td></tr></table></figure><h4 id="3-4-2-JDK-11"><a href="#3-4-2-JDK-11" class="headerlink" title="3.4.2 JDK 11"></a>3.4.2 JDK 11</h4><ul><li>安装</li></ul><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">apt <span class="hljs-keyword">install </span>openjdk<span class="hljs-number">-11</span>-<span class="hljs-keyword">jdk-headless</span><br><span class="hljs-keyword"></span>apt <span class="hljs-keyword">install </span>openjdk<span class="hljs-number">-11</span>-<span class="hljs-keyword">jre-headless</span><br></code></pre></td></tr></table></figure><ul><li>卸载</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">apt <span class="hljs-built_in">remove</span> -y openjdk-11-jdk-headless<br>apt <span class="hljs-built_in">remove</span> -y openjdk-11-jre-headless<br></code></pre></td></tr></table></figure><h4 id="3-4-3-JDK17"><a href="#3-4-3-JDK17" class="headerlink" title="3.4.3 JDK17"></a>3.4.3 JDK17</h4><ul><li>安装</li></ul><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">apt <span class="hljs-keyword">install </span>openjdk<span class="hljs-number">-17</span>-<span class="hljs-keyword">jdk-headless</span><br><span class="hljs-keyword"></span>apt <span class="hljs-keyword">install </span>openjdk<span class="hljs-number">-17</span>-<span class="hljs-keyword">jre-headless</span><br></code></pre></td></tr></table></figure><ul><li>卸载</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">apt <span class="hljs-built_in">remove</span> -y openjdk-17-jdk-headless<br>apt <span class="hljs-built_in">remove</span> -y openjdk-17-jre-headless<br></code></pre></td></tr></table></figure><h4 id=""><a href="#" class="headerlink" title=""></a></h4><h4 id="3-4-3-JDK18"><a href="#3-4-3-JDK18" class="headerlink" title="3.4.3 JDK18"></a>3.4.3 JDK18</h4><ul><li>安装</li></ul><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">apt <span class="hljs-keyword">install </span>openjdk<span class="hljs-number">-18</span>-<span class="hljs-keyword">jdk-headless</span><br><span class="hljs-keyword"></span>apt <span class="hljs-keyword">install </span>openjdk<span class="hljs-number">-18</span>-<span class="hljs-keyword">jre-headless</span><br></code></pre></td></tr></table></figure><ul><li>卸载</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">apt <span class="hljs-built_in">remove</span> -y openjdk-18-jdk-headless<br>apt <span class="hljs-built_in">remove</span> -y openjdk-18-jre-headless<br></code></pre></td></tr></table></figure><h4 id="3-4-3-环境变量"><a href="#3-4-3-环境变量" class="headerlink" title="3.4.3 环境变量"></a>3.4.3 环境变量</h4><ul><li>确定JDK的安装位置</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">update</span><span class="hljs-operator">-</span>alternatives <span class="hljs-comment">--config java</span><br></code></pre></td></tr></table></figure><ul><li>设置JAVA_HOME路径</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;JAVA_HOME=&quot;</span>/usr/lib“ \nJRE_HOME=<span class="hljs-variable">$&#123;JAVA_HOME&#125;</span>/jre \nCLASSPATH=.:<span class="hljs-variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="hljs-variable">$&#123;JRE_HOME&#125;</span>/lib  \nPATH=<span class="hljs-variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="hljs-variable">$PATH</span> <span class="hljs-string">&quot; &gt;&gt; /etc/profile</span><br></code></pre></td></tr></table></figure><ul><li>重新加载环境，使设置生效</li></ul><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">source</span> <span class="hljs-regexp">/etc/</span>environment<br></code></pre></td></tr></table></figure><ul><li>验证环境变量</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-variable">$JAVA_HOME</span><br></code></pre></td></tr></table></figure><h3 id="3-5-Pypi-即pip"><a href="#3-5-Pypi-即pip" class="headerlink" title="3.5 Pypi(即pip)"></a>3.5 Pypi(即pip)</h3><h4 id="临时使用"><a href="#临时使用" class="headerlink" title="临时使用"></a>临时使用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple some-package<br></code></pre></td></tr></table></figure><h4 id="设为默认"><a href="#设为默认" class="headerlink" title="设为默认"></a>设为默认</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">python</span> -<span class="hljs-keyword">m</span> pip install -i https://pypi.tuna.tsinghua.edu.<span class="hljs-keyword">cn</span>/simple --upgrade pip<br>pip config <span class="hljs-keyword">set</span> <span class="hljs-keyword">global</span>.<span class="hljs-built_in">index</span>-url https://pypi.tuna.tsinghua.edu.<span class="hljs-keyword">cn</span>/simple<br></code></pre></td></tr></table></figure><h3 id="3-6-Anaconda"><a href="#3-6-Anaconda" class="headerlink" title="3.6 Anaconda"></a>3.6 Anaconda</h3><p>2.4.1安装</p><p>从清华源下载<code>Anaconda</code>安装包，并命名为<code>Anaconda.sh</code></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>archive/Anaconda3-<span class="hljs-number">2022.05</span>-Linux-x86_64.sh<br></code></pre></td></tr></table></figure><p>执行</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">chmod +x  <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Anaconda</span>.</span></span>sh<span class="hljs-operator"> &amp;&amp; </span>./<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Anaconda</span>.</span></span>sh<br></code></pre></td></tr></table></figure><p>2.4.2配置</p><p>关闭自动打开<code>conda</code>基础环境，即关掉<code>(base)</code></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">conda<span class="hljs-built_in"> config </span>--<span class="hljs-built_in">set</span> auto_activate_base <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><p>运行下面语句，生成当前用户目录下的<code>.condarc</code> 文件，以修改Anaconda仓库。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">conda config --<span class="hljs-built_in">set</span> show_channel_urls <span class="hljs-built_in">yes</span><br></code></pre></td></tr></table></figure><p>修改当前用户目录下的<code>.condarc</code> 文件，加入以下内容。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs awk">channels:<br>  - defaults<br>show_channel_urls: true<br>default_channels:<br>  - https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>pkgs/main<br>  - https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>pkgs/r<br>  - https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>pkgs/msys2<br>custom_channels:<br>  conda-forge: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  msys2: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  bioconda: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  menpo: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  pytorch: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  pytorch-lts: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  simpleitk: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br></code></pre></td></tr></table></figure><h3 id="3-7-Docker-CE"><a href="#3-7-Docker-CE" class="headerlink" title="3.7 Docker CE"></a>3.7 Docker CE</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -fsSL https:<span class="hljs-regexp">//</span>download.docker.com<span class="hljs-regexp">/linux/</span>debian<span class="hljs-regexp">/gpg | sudo gpg --dearmor -o /</span>etc<span class="hljs-regexp">/apt/</span>keyrings/docker.gpg<br>echo \<br>  <span class="hljs-string">&quot;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian \</span><br><span class="hljs-string">  $(lsb_release -cs) stable&quot;</span> | sudo tee <span class="hljs-regexp">/etc/</span>apt<span class="hljs-regexp">/sources.list.d/</span>docker.list &gt; <span class="hljs-regexp">/dev/</span>null<br>sudo apt-get update<br>sudo apt-get install docker-ce<br></code></pre></td></tr></table></figure><h3 id="3-8-Go"><a href="#3-8-Go" class="headerlink" title="3.8 Go"></a>3.8 Go</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs vim">wget -O <span class="hljs-keyword">go</span> https://<span class="hljs-keyword">go</span>.dev/<span class="hljs-keyword">dl</span>/go1.<span class="hljs-number">19</span>.linux-amd64.tar.gz<br>tar<br><span class="hljs-keyword">cp</span> <span class="hljs-keyword">go</span> /usr/lib<br><span class="hljs-keyword">echo</span> -<span class="hljs-keyword">e</span> <span class="hljs-comment">&quot;export GOROOT=/usr/lib/go</span><br>export GOPATH=/home/ubuntu/code/<span class="hljs-keyword">go</span>/<br>export GOPROXY=https://goproxy.<span class="hljs-keyword">cn</span><br>export PATH=$PATH:$GOROOT/bin<br><span class="hljs-comment">&quot;  &gt;&gt; /etc/profile</span><br><span class="hljs-keyword">source</span> /etc/<span class="hljs-keyword">profile</span><br></code></pre></td></tr></table></figure><h3 id="3-9-宝塔LInux面板"><a href="#3-9-宝塔LInux面板" class="headerlink" title="3.9 宝塔LInux面板"></a>3.9 宝塔LInux面板</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br></code></pre></td></tr></table></figure><h2 id="4-开发工具"><a href="#4-开发工具" class="headerlink" title="4.开发工具"></a>4.开发工具</h2><h3 id="4-1-Jerbrain全家桶"><a href="#4-1-Jerbrain全家桶" class="headerlink" title="4.1 Jerbrain全家桶"></a>4.1 Jerbrain全家桶</h3><h4 id="4-1-1-AppToolBox"><a href="#4-1-1-AppToolBox" class="headerlink" title="4.1.1 AppToolBox"></a>4.1.1 AppToolBox</h4><h4 id="4-1-2-PyCharm"><a href="#4-1-2-PyCharm" class="headerlink" title="4.1.2 PyCharm"></a>4.1.2 PyCharm</h4><p>方法一</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ada">sudo snap install pycharm-professional <span class="hljs-comment">--classic</span><br>sudo snap install pycharm-community <span class="hljs-comment">--classic</span><br></code></pre></td></tr></table></figure><p>方法二 手动下载安装，下载速度快</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 专业版</span><br>wget https://download.jetbrains.com.cn/python/pycharm-professional-2022.2.tar.gz<br>tar -zxvf pycharm-professional-2022.2.tar.gz<br><span class="hljs-built_in">mkdir</span> ./app<br><span class="hljs-built_in">mkdir</span> ./app/pycharm-professional<br><span class="hljs-built_in">cp</span> -r ./pycharm-2022.2 ./app/pycharm-professional<br>./app/pycharm-professional/pycharm-2022.2/bin/pycharm.sh<br><span class="hljs-comment"># 社区版</span><br>wget https://download.jetbrains.com.cn/python/pycharm-community-2022.2.tar.gz<br>tar -zxvf pycharm-community-2022.2.tar.gz<br><span class="hljs-built_in">mkdir</span> ./app<br><span class="hljs-built_in">mkdir</span> ./app/pycharm-community<br><span class="hljs-built_in">cp</span> -r ./pycharm-2022.2 ./app/pycharm-community<br>./app/pycharm-community/pycharm-2022.2/bin/pycharm.sh<br></code></pre></td></tr></table></figure><h4 id="4-1-3-IntelliJ-IDEA"><a href="#4-1-3-IntelliJ-IDEA" class="headerlink" title="4.1.3 IntelliJ IDEA"></a>4.1.3 IntelliJ IDEA</h4><h4 id="4-1-4-CLion"><a href="#4-1-4-CLion" class="headerlink" title="4.1.4 CLion"></a>4.1.4 CLion</h4><h4 id="4-1-5-WebStorm"><a href="#4-1-5-WebStorm" class="headerlink" title="4.1.5 WebStorm"></a>4.1.5 WebStorm</h4><h4 id="4-1-6-GoLand"><a href="#4-1-6-GoLand" class="headerlink" title="4.1.6 GoLand"></a>4.1.6 GoLand</h4><h3 id="4-2-Visio-Studio-Code"><a href="#4-2-Visio-Studio-Code" class="headerlink" title="4.2 Visio Studio Code"></a>4.2 Visio Studio Code</h3><h4 id="4-2-1-包管理器"><a href="#4-2-1-包管理器" class="headerlink" title="4.2.1 包管理器"></a>4.2.1 包管理器</h4><ul><li>安装</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 下载并安装Microsoft证书</span><br>wget -q -O-  https:<span class="hljs-regexp">//</span>packages.microsoft.com<span class="hljs-regexp">/keys/mi</span>crosoft.asc | apt-key add -<br><span class="hljs-comment"># 导入Visual Studio Code官方源</span><br>echo <span class="hljs-string">&#x27;deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main&#x27;</span> | tee <span class="hljs-regexp">/etc/</span>apt<span class="hljs-regexp">/sources.list.d/mi</span>crosoft-vscode.list<br>apt update &amp;&amp; apt install -y code<br></code></pre></td></tr></table></figure><ul><li>卸载</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">apt <span class="hljs-built_in">remove</span> code<br></code></pre></td></tr></table></figure><h4 id="4-2-2-deb安装"><a href="#4-2-2-deb安装" class="headerlink" title="4.2.2 deb安装"></a>4.2.2 deb安装</h4><ul><li>安装</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget -O code.deb https:<span class="hljs-regexp">//</span>az764295.vo.msecnd.net<span class="hljs-regexp">/stable/</span>e4503b30fc78200f846c62cf8091b76ff5547662/code_1.<span class="hljs-number">70.2</span>-<span class="hljs-number">1660629410</span>_amd64.deb<br>dpkg -i <br></code></pre></td></tr></table></figure><ul><li>卸载</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">apt <span class="hljs-built_in">remove</span> code<br></code></pre></td></tr></table></figure><h3 id="4-3-Tabby"><a href="#4-3-Tabby" class="headerlink" title="4.3 Tabby"></a>4.3 Tabby</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">wget</span> https://github.com/Eugeny/tabby/releases/download/v1.<span class="hljs-number">0</span>.<span class="hljs-number">183</span>/tabby-<span class="hljs-number">1</span>.<span class="hljs-number">0</span>.<span class="hljs-number">183</span>-linux-x64.deb<br><span class="hljs-attribute">dpkg</span> -i tabby-<span class="hljs-number">1</span>.<span class="hljs-number">0</span>.<span class="hljs-number">183</span>-linux-x64.deb<br></code></pre></td></tr></table></figure><h3 id="4-4-VMware-WordstationPro"><a href="#4-4-VMware-WordstationPro" class="headerlink" title="4.4 VMware WordstationPro"></a>4.4 VMware WordstationPro</h3><h3 id="4-5-Zsh"><a href="#4-5-Zsh" class="headerlink" title="4.5 Zsh"></a>4.5 Zsh</h3><h2 id="5-常用软件"><a href="#5-常用软件" class="headerlink" title="5.常用软件"></a>5.常用软件</h2><h3 id="5-1-Chrome"><a href="#5-1-Chrome" class="headerlink" title="5.1 Chrome"></a>5.1 Chrome</h3><h4 id="5-1-1-包管理器"><a href="#5-1-1-包管理器" class="headerlink" title="5.1.1 包管理器"></a>5.1.1 包管理器</h4><ul><li>安装</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 下载并安装Google证书</span><br>wget -q -O - https:<span class="hljs-regexp">//</span>dl.google.com<span class="hljs-regexp">/linux/</span>linux_signing_key.pub | apt-key add -<br><span class="hljs-comment"># 导入Google Chrome官方源</span><br>echo <span class="hljs-string">&quot;deb [arch=amd64] https://dl.google.com/linux/chrome/deb/ stable main&quot;</span> &gt; <span class="hljs-regexp">/etc/</span>apt<span class="hljs-regexp">/sources.list.d/g</span>oogle-chrome.list<br><span class="hljs-comment">#更新软件源</span><br>apt update<br><span class="hljs-comment"># 安装Google Chrome稳定版</span><br>apt install -y google-chrome-stable<br></code></pre></td></tr></table></figure><ul><li>卸载</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">apt <span class="hljs-built_in">remove</span> -y google-chrome-stable<br></code></pre></td></tr></table></figure><h4 id="5-1-2-安装包"><a href="#5-1-2-安装包" class="headerlink" title="5.1.2 安装包"></a>5.1.2 安装包</h4><ul><li>安装</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 下载安装包</span><br>wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb<br><span class="hljs-comment"># 安装软件包</span><br>sudo dpkg -i google-chrome-stable_current_amd64.deb <br></code></pre></td></tr></table></figure><ul><li>卸载</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">apt <span class="hljs-built_in">remove</span> -y google-chrome-stable<br></code></pre></td></tr></table></figure><h3 id="5-2-MicroSoft-Edge"><a href="#5-2-MicroSoft-Edge" class="headerlink" title="5.2 MicroSoft Edge"></a>5.2 MicroSoft Edge</h3><h4 id="4-2-1-包管理器-1"><a href="#4-2-1-包管理器-1" class="headerlink" title="4.2.1 包管理器"></a>4.2.1 包管理器</h4><ul><li>安装</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 下载并安装Microsoft证书</span><br>wget -q -O-  https:<span class="hljs-regexp">//</span>packages.microsoft.com<span class="hljs-regexp">/keys/mi</span>crosoft.asc | apt-key add -<br><span class="hljs-comment"># 导入Microsoft Edge官方源</span><br>echo <span class="hljs-string">&#x27;deb [arch=amd64] https://packages.microsoft.com/repos/edge stable main&#x27;</span> | tee <span class="hljs-regexp">/etc/</span>apt<span class="hljs-regexp">/sources.list.d/mi</span>crosoft-edge.list<br>apt update &amp;&amp; apt install -y microsoft-edge-stable<br></code></pre></td></tr></table></figure><ul><li>卸载</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">apt <span class="hljs-built_in">remove</span> -y microsoft-edge-stable<br></code></pre></td></tr></table></figure><h4 id="4-2-2-deb安装-1"><a href="#4-2-2-deb安装-1" class="headerlink" title="4.2.2 deb安装"></a>4.2.2 deb安装</h4><ul><li>安装</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 下载安装包</span><br>wget -O microsoft-edge-stable.deb https:<span class="hljs-regexp">//</span>packages.microsoft.com<span class="hljs-regexp">/repos/</span>edge<span class="hljs-regexp">/pool/m</span>ain<span class="hljs-regexp">/m/mi</span>crosoft-edge-stable/microsoft-edge-stable_103.<span class="hljs-number">0.1264</span>.<span class="hljs-number">77</span>-<span class="hljs-number">1</span>_amd64.deb<br><span class="hljs-comment"># 安装</span><br>sudo dpkg -i microsoft-edge-stable.deb<br></code></pre></td></tr></table></figure><ul><li>卸载</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">apt <span class="hljs-built_in">remove</span> -y microsoft-edge-stable<br></code></pre></td></tr></table></figure><h3 id="5-3-搜狗输入法"><a href="#5-3-搜狗输入法" class="headerlink" title="5.3 搜狗输入法"></a>5.3 搜狗输入法</h3><h4 id="4-2-1-包管理器-2"><a href="#4-2-1-包管理器-2" class="headerlink" title="4.2.1 包管理器"></a>4.2.1 包管理器</h4><ul><li>安装</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><ul><li>卸载</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><h4 id="4-2-2-deb安装-2"><a href="#4-2-2-deb安装-2" class="headerlink" title="4.2.2 deb安装"></a>4.2.2 deb安装</h4><ul><li>安装</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget -O sougoupinyin.deb https:<span class="hljs-regexp">//im</span>e.sogouimecdn.com<span class="hljs-regexp">/202208262301/</span>b6136c741999183a96f1cae010453e40<span class="hljs-regexp">/dl/g</span>zindex<span class="hljs-regexp">/1656597217/</span>sogoupinyin_4.<span class="hljs-number">0.1</span>.<span class="hljs-number">2800</span>_x86_64.deb<br>dpkg -i sogoupinyin.deb<br></code></pre></td></tr></table></figure><ul><li>卸载</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">apt <span class="hljs-built_in">remove</span> <br></code></pre></td></tr></table></figure><h3 id="5-5-Typora"><a href="#5-5-Typora" class="headerlink" title="5.5 Typora"></a>5.5 Typora</h3><h4 id="5-5-1-包管理器"><a href="#5-5-1-包管理器" class="headerlink" title="5.5.1 包管理器"></a>5.5.1 包管理器</h4><ul><li>安装</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"> <br></code></pre></td></tr></table></figure><ul><li>卸载</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"> <br></code></pre></td></tr></table></figure><h4 id="5-5-2-deb安装"><a href="#5-5-2-deb安装" class="headerlink" title="5.5.2 deb安装"></a>5.5.2 deb安装</h4><ul><li>安装</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"> <br></code></pre></td></tr></table></figure><ul><li>卸载</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"> <br></code></pre></td></tr></table></figure><h2 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h2><h3 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h3><h3 id="中文"><a href="#中文" class="headerlink" title="中文"></a>中文</h3><h3 id="Snap"><a href="#Snap" class="headerlink" title="Snap"></a>Snap</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo snap install snap-store snap-store-proxy snap-store-proxy-client<br></code></pre></td></tr></table></figure><h3 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h3><h3 id="Hosts"><a href="#Hosts" class="headerlink" title="Hosts"></a>Hosts</h3><figure class="highlight sml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs sml">#!/usr/bin/env python<br># coding:utf-<span class="hljs-number">8</span><br>  <br>import socket<br>def output_hosts<span class="hljs-literal">()</span>:<br>    domains = [<span class="hljs-symbol">&#x27;github</span>.com&#x27;,<br>                 <span class="hljs-symbol">&#x27;gist</span>.github.com&#x27;,<br>                 <span class="hljs-symbol">&#x27;assets</span>-cdn.github.com&#x27;,<br>                 <span class="hljs-symbol">&#x27;raw</span>.githubusercontent.com&#x27;,<br>                 <span class="hljs-symbol">&#x27;gist</span>.githubusercontent.com&#x27;,<br>                 <span class="hljs-symbol">&#x27;cloud</span>.githubusercontent.com&#x27;,<br>                 <span class="hljs-symbol">&#x27;camo</span>.githubusercontent.com&#x27;,<br>                 <span class="hljs-symbol">&#x27;avatars0</span>.githubusercontent.com&#x27;,<br>                 <span class="hljs-symbol">&#x27;avatars1</span>.githubusercontent.com&#x27;,<br>                 <span class="hljs-symbol">&#x27;avatars2</span>.githubusercontent.com&#x27;,<br>                 <span class="hljs-symbol">&#x27;avatars3</span>.githubusercontent.com&#x27;,<br>                 <span class="hljs-symbol">&#x27;avatars4</span>.githubusercontent.com&#x27;,<br>                 <span class="hljs-symbol">&#x27;avatars5</span>.githubusercontent.com&#x27;,<br>                 <span class="hljs-symbol">&#x27;avatars6</span>.githubusercontent.com&#x27;,<br>                 <span class="hljs-symbol">&#x27;avatars7</span>.githubusercontent.com&#x27;,<br>                 <span class="hljs-symbol">&#x27;avatars8</span>.githubusercontent.com&#x27;,<br>                 <span class="hljs-symbol">&#x27;avatars</span>.githubusercontent.com&#x27;,<br>                 <span class="hljs-symbol">&#x27;github</span>.githubassets.com&#x27;,<br>                 <span class="hljs-symbol">&#x27;user</span>-images.githubusercontent.com&#x27;,<br>                 <span class="hljs-symbol">&#x27;codeload</span>.github.com&#x27;,<br>                 <span class="hljs-symbol">&#x27;favicons</span>.githubusercontent.com&#x27;,<br>                 <span class="hljs-symbol">&#x27;api</span>.github.com&#x27;<br>                 ]<br>    <span class="hljs-keyword">with</span> <span class="hljs-keyword">open</span>(<span class="hljs-symbol">&#x27;hosts</span>.txt&#x27;, <span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        f.write(<span class="hljs-string">&#x27;# GitHub Start \n&#x27;</span>)<br>        for domain <span class="hljs-keyword">in</span> domains:<br>            print(<span class="hljs-symbol">&#x27;Querying</span> ip for domain %s&#x27;%domain)<br>            ip = socket.gethostbyname(domain)<br>            print(ip)<br>            f.write(<span class="hljs-string">&#x27;%s %s\n&#x27;</span>%(ip, domain))<br>        f.write(<span class="hljs-string">&#x27;# GitHub End \n&#x27;</span>) <br>         <br>         <br>     <br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-symbol">&#x27;__main__&#x27;</span>:<br>     output_hosts<span class="hljs-literal">()</span><br><br></code></pre></td></tr></table></figure><h3 id="APPimage"><a href="#APPimage" class="headerlink" title="APPimage"></a>APPimage</h3><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#!/bin/sh</span><br><span class="hljs-comment"># time:2022-07-16</span><br><span class="hljs-comment"># author:xunpod</span><br><span class="hljs-comment"># website:blog.xunpod.com</span><br><br>set -e<br><span class="hljs-comment"># 卸载cloud-init</span><br>apt remove -y cloud-init <br>apt purge -y cloud-init <br>rm -rf <span class="hljs-regexp">/etc/</span>cloud &amp;&amp; rm -rf <span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/cloud/</span><br><br><span class="hljs-comment"># 更新软件源 update </span><br>apt update &amp;&amp; apt upgrade -y<br><span class="hljs-comment"># 安装基础软件包 install</span><br>apt install -y openssh-server vim gcc g++ cmake curl git wget unzip ntpdate apt-transport-https ca-certificates software-properties-common<br><span class="hljs-comment"># 安装运行软件包</span><br>apt install -y openjdk-<span class="hljs-number">8</span>-jre-headless python2.<span class="hljs-number">7</span> python3 python3-pip ruby sqlite3 mysql-server<br><span class="hljs-comment"># 安装扩展软件包</span><br><span class="hljs-comment"># apt install -y htop m4 ruby gfortran build-essential subversion perl mpich libblas-dev liblapack-dev libatlas-base-dev libpng-dev libtiff-dev libjpeg-dev libfftw3-dev automake autoconf libtool libnetcdf-dev pnetcdf-bin atool libxv-dev ncurses-dev libncurses5-dev python3-ck cakephp-scripts cme cde ack antlr3 asciidoc autopoint binutils bison bzip2 ccache cpio  device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib  gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncursesw5-dev libreadline-dev libssl-dev lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf  qemu-utils rsync scons squashfs-tools swig texinfo uglifyjs upx-ucl xmlto xxd zlib1g-dev </span><br><span class="hljs-comment"># 安装 MicroSoft Edge浏览器 &amp; Visual Studio Code</span><br><span class="hljs-comment"># 下载并安装Microsoft证书</span><br>wget -O- https:<span class="hljs-regexp">//</span>packages.microsoft.com<span class="hljs-regexp">/keys/mi</span>crosoft.asc | gpg --dearmor | tee <span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/keyrings/mi</span>crosoft.gpg<br><span class="hljs-comment"># wget -q https://packages.microsoft.com/keys/microsoft.asc -O- | apt-key add -</span><br><span class="hljs-comment"># 导入Microsoft Edge &amp; Visual Studio Code官方源</span><br>echo <span class="hljs-string">&#x27;deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/edge stable main&#x27;</span> | tee <span class="hljs-regexp">/etc/</span>apt<span class="hljs-regexp">/sources.list.d/mi</span>crosoft-edge.list<br>echo <span class="hljs-string">&#x27;deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/vscode stable main&#x27;</span> | tee <span class="hljs-regexp">/etc/</span>apt<span class="hljs-regexp">/sources.list.d/mi</span>crosoft-vscode.list<br><span class="hljs-comment"># add-apt-repository &quot;deb [arch=amd64] https://packages.microsoft.com/repos/edge stable main&quot;</span><br><span class="hljs-comment"># add-apt-repository &quot;deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main&quot;</span><br><span class="hljs-comment">#更新软件源</span><br>apt update<br><span class="hljs-comment"># 安装</span><br>apt install -y microsoft-edge-stable code<br><span class="hljs-comment"># 下载并安装Google证书</span><br>wget -q -O - https:<span class="hljs-regexp">//</span>dl.google.com<span class="hljs-regexp">/linux/</span>linux_signing_key.pub | apt-key add -<br><span class="hljs-comment"># 导入Google Chrome官方源</span><br>echo <span class="hljs-string">&quot;deb [arch=amd64] https://dl.google.com/linux/chrome/deb/ stable main&quot;</span> &gt; <span class="hljs-regexp">/etc/</span>apt<span class="hljs-regexp">/sources.list.d/g</span>oogle-chrome.list<br><span class="hljs-comment">#更新软件源</span><br>apt update<br><span class="hljs-comment"># 安装Google Chrome稳定版</span><br>apt install google-chrome-stable<br><br><span class="hljs-comment"># 清理安装</span><br>apt autoremove -y<br>apt autoclean<br>apt clean<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>基于Python的豆瓣影评数据爬取及分析</title>
    <link href="/2019/10/26/%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E8%B1%86%E7%93%A3%E5%BD%B1%E8%AF%84%E6%95%B0%E6%8D%AE%E7%88%AC%E5%8F%96%E5%8F%8A%E5%88%86%E6%9E%90/"/>
    <url>/2019/10/26/%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E8%B1%86%E7%93%A3%E5%BD%B1%E8%AF%84%E6%95%B0%E6%8D%AE%E7%88%AC%E5%8F%96%E5%8F%8A%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="基于Python的豆瓣影评数据爬取及分析"><a href="#基于Python的豆瓣影评数据爬取及分析" class="headerlink" title="基于Python的豆瓣影评数据爬取及分析"></a><center>基于Python的豆瓣影评数据爬取及分析</h1><h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>豆瓣用户每天都在对“看过”的电影进行“很差”到“力荐”的评价，豆瓣根据每部影片看过的人数以及该影片所得的评价等综合数据，通过算法分析产生豆瓣电影 Top 250。对于这个榜单，我产生了一些疑问。比如，我喜欢的某个导演有多少部电影进入榜单？榜单中哪一类型的电影最多？电影的排名与评分有什么样的关系？为了回答这些问题，我将构建爬虫程序抓取豆瓣电影Top250影评信息，并进行简单的数据分析。</p><h2 id="二、数据爬取"><a href="#二、数据爬取" class="headerlink" title="二、数据爬取"></a>二、数据爬取</h2><h3 id="1-数据抓取"><a href="#1-数据抓取" class="headerlink" title="1. 数据抓取"></a>1. 数据抓取</h3><p>观察豆瓣电影Top250任意一页URL地址的格式。可以看到第一页URL地址为“<a href="https://movie.douban.com/top250?start=0&amp;filter=">https://movie.douban.com/top250?start=0&amp;filter=</a> ”，第二页的URL地址为“<a href="https://movie.douban.com/top250?start=25&amp;filter=">https://movie.douban.com/top250?start=25&amp;filter=</a> ”，并且每一页都展示25条豆瓣影评数据。</p><p>分析这些URL地址：</p><pre><code class="hljs">http://代表资源传输使用https协议movie.douban.com 是豆瓣的二级域名，指向豆瓣的服务器。/top250 是服务器的某个资源，即豆瓣电影Top250的地址定位符。start=25&amp;filter=  是URL的两个参数，分别代表从多少条记录开始展示和过滤条件。</code></pre><p>将URL划分为两部分：</p><pre><code class="hljs">基础部分：http://movie.douban.com/top250参数部分：?start=  &amp;filter</code></pre><p>​<br>接下来使用<strong>urlib</strong>模块抓取页面内容。</p><p>定义一个类<strong>MovieTop</strong>，在类中定义一个初始化方法和一个获取页面方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MovieTop</span>(<span class="hljs-title class_ inherited__">object</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;开始从豆瓣电影抓取数据.......&#x27;</span>)<br>        self.get_movie_info()<br></code></pre></td></tr></table></figure><p>将一些基本信息的参数初始化放在类的初始化中，即<strong>init</strong>方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>    self.start = <span class="hljs-number">0</span><br>    self.param = <span class="hljs-string">&#x27;&amp;filter&#x27;</span><br>    self.headers = &#123;<span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) &quot;</span><br>                        &#125;<br>    self.movieList = []<br></code></pre></td></tr></table></figure><p>使用<strong>re</strong>模块中的<strong>compile</strong>函数解析爬取到的HTML文本，从而得到所需要的数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python">pattern = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">u&#x27;&lt;div.*?class=&quot;item&quot;&gt;.*?&#x27;</span><br>            + <span class="hljs-string">u&#x27;&lt;div.*?class=&quot;pic&quot;&gt;.*?&#x27;</span><br>            + <span class="hljs-string">u&#x27;&lt;em.*?class=&quot;&quot;&gt;(.*?)&lt;/em&gt;.*?&#x27;</span><br>            + <span class="hljs-string">u&#x27;&lt;div.*?class=&quot;info&quot;&gt;.*?&#x27;</span><br>            + <span class="hljs-string">u&#x27;&lt;span.*?class=&quot;title&quot;&gt;(.*?)&lt;/span&gt;.*?&#x27;</span><br>            + <span class="hljs-string">u&#x27;&lt;span.*?class=&quot;other&quot;&gt;(.*?)&lt;/span&gt;.*?&#x27;</span><br>            + <span class="hljs-string">u&#x27;&lt;div.*?class=&quot;bd&quot;&gt;.*?&#x27;</span><br>            + <span class="hljs-string">u&#x27;&lt;p.*?class=&quot;&quot;&gt;.*?&#x27;</span><br>            + <span class="hljs-string">u&#x27;导演:\s(.*?)\s.*?&lt;br&gt;&#x27;</span><br>            + <span class="hljs-string">u&#x27;(.*?)&amp;nbsp;/&amp;nbsp;&#x27;</span><br>            + <span class="hljs-string">u&#x27;(.*?)&amp;nbsp;/&amp;nbsp;(.*?)&lt;/p&gt;.*?&#x27;</span><br>            + <span class="hljs-string">u&#x27;&lt;div.*?class=&quot;star&quot;&gt;.*?&#x27;</span><br>            + <span class="hljs-string">u&#x27;&lt;span.*?class=&quot;rating_num&quot;.*?property=&quot;v:average&quot;&gt;&#x27;</span><br>            + <span class="hljs-string">u&#x27;(.*?)&lt;/span&gt;.*?&#x27;</span><br>            + <span class="hljs-string">u&#x27;&lt;span&gt;(.*?)人评价&lt;/span&gt;.*?&#x27;</span><br>            + <span class="hljs-string">u&#x27;&lt;span.*?class=&quot;inq&quot;&gt;(.*?)&lt;/span&gt;&#x27;</span>, re.S)<br></code></pre></td></tr></table></figure><p>另外，获取页面信息时，需要知道从第几条记录开始查找和每次查找多少条记录。在这个方法中需要一个循环，通过循环抓取需要的记录。构建基础代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_page</span>(<span class="hljs-params">self</span>):<br>    <span class="hljs-keyword">try</span>:<br>        url = <span class="hljs-string">&#x27;https://movie.douban.com/top250?start=&#x27;</span> + <span class="hljs-built_in">str</span>(self.start) + <span class="hljs-string">&#x27;&amp;filter=&#x27;</span><br>        req = request.Request(url, headers=self.headers)<br>        response = request.urlopen(req)<br>        page = response.read().decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>        page_num = (self.start + <span class="hljs-number">25</span>) // <span class="hljs-number">25</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;正在抓取第&#x27;</span> + <span class="hljs-built_in">str</span>(page_num) + <span class="hljs-string">&#x27;页数据...&#x27;</span>)<br>        self.start += <span class="hljs-number">25</span><br>        <span class="hljs-keyword">return</span> page<br>    <span class="hljs-keyword">except</span> request.URLError <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">hasattr</span>(e, <span class="hljs-string">&#x27;reason&#x27;</span>):<br>           <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;获取失败，失败原因：&#x27;</span>, e.reason)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_movie_info</span>(<span class="hljs-params">self</span>):<br>    pattern = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">u&#x27;&lt;div.*?class=&quot;item&quot;&gt;.*?&#x27;</span><br>                  + <span class="hljs-string">u&#x27;&lt;div.*?class=&quot;pic&quot;&gt;.*?&#x27;</span><br>                  + <span class="hljs-string">u&#x27;&lt;em.*?class=&quot;&quot;&gt;(.*?)&lt;/em&gt;.*?&#x27;</span><br>                  + <span class="hljs-string">u&#x27;&lt;div.*?class=&quot;info&quot;&gt;.*?&#x27;</span><br>                  + <span class="hljs-string">u&#x27;&lt;span.*?class=&quot;title&quot;&gt;(.*?)&lt;/span&gt;.*?&#x27;</span><br>                  + <span class="hljs-string">u&#x27;&lt;span.*?class=&quot;other&quot;&gt;(.*?)&lt;/span&gt;.*?&#x27;</span><br>                  + <span class="hljs-string">u&#x27;&lt;div.*?class=&quot;bd&quot;&gt;.*?&#x27;</span><br>                  + <span class="hljs-string">u&#x27;&lt;p.*?class=&quot;&quot;&gt;.*?&#x27;</span><br>                  + <span class="hljs-string">u&#x27;导演:\s(.*?)\s.*?&lt;br&gt;&#x27;</span><br>                  + <span class="hljs-string">u&#x27;(.*?)&amp;nbsp;/&amp;nbsp;&#x27;</span><br>                  + <span class="hljs-string">u&#x27;(.*?)&amp;nbsp;/&amp;nbsp;(.*?)&lt;/p&gt;.*?&#x27;</span><br>                  + <span class="hljs-string">u&#x27;&lt;div.*?class=&quot;star&quot;&gt;.*?&#x27;</span><br>                  + <span class="hljs-string">u&#x27;&lt;span.*?class=&quot;rating_num&quot;.*?property=&quot;v:average&quot;&gt;&#x27;</span><br>                  + <span class="hljs-string">u&#x27;(.*?)&lt;/span&gt;.*?&#x27;</span><br>                  + <span class="hljs-string">u&#x27;&lt;span&gt;(.*?)人评价&lt;/span&gt;.*?&#x27;</span><br>                  + <span class="hljs-string">u&#x27;&lt;span.*?class=&quot;inq&quot;&gt;(.*?)&lt;/span&gt;&#x27;</span>, re.S)<br>    <span class="hljs-keyword">while</span> self.start &lt;= <span class="hljs-number">225</span>:<br>        page = self.get_page()<br>        movies = re.findall(pattern, page)<br>        <span class="hljs-keyword">for</span> movie <span class="hljs-keyword">in</span> movies:<br>            self.movieList.append([movie[<span class="hljs-number">0</span>],<br>                                    movie[<span class="hljs-number">1</span>],<br>                                    movie[<span class="hljs-number">2</span>].lstrip(<span class="hljs-string">&#x27;&amp;nbsp;/&amp;nbsp;&#x27;</span>),<br>                                    movie[<span class="hljs-number">3</span>],<br>                                    movie[<span class="hljs-number">4</span>].lstrip(),<br>                                    movie[<span class="hljs-number">5</span>],<br>                                    movie[<span class="hljs-number">6</span>].rstrip(),<br>                                    movie[<span class="hljs-number">7</span>],<br>                                    movie[<span class="hljs-number">8</span>],<br>                                    movie[<span class="hljs-number">9</span>]])<br></code></pre></td></tr></table></figure><h3 id="2-数据存储"><a href="#2-数据存储" class="headerlink" title="2. 数据存储"></a>2. 数据存储</h3><h4 id="2-1-写入csv文件"><a href="#2-1-写入csv文件" class="headerlink" title="2.1 写入csv文件"></a>2.1 写入csv文件</h4><p>在<strong>MovieTop</strong>类中，定义<strong>write_into_csv</strong>方法，使用<strong>csv</strong>模块，将爬取到的数据写入到文件douban_top250.csv中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">write_into_csv</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;开始写入.csv文件...&#x27;</span>)<br>        write_to_csv = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;douban_top250.csv&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>, newline=<span class="hljs-string">&#x27;&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8-sig&#x27;</span>)<br>        csv_top=csv.writer(write_to_csv)<br>        <span class="hljs-keyword">try</span>:<br>            csv_top.writerow([<span class="hljs-string">&#x27;电影排名&#x27;</span>,<span class="hljs-string">&#x27;电影名称&#x27;</span>,<span class="hljs-string">&#x27;电影别名&#x27;</span>,<span class="hljs-string">&#x27;导演&#x27;</span>,<span class="hljs-string">&#x27;上映年份&#x27;</span>,<span class="hljs-string">&#x27;制作国家/地区&#x27;</span>,<span class="hljs-string">&#x27;电影类别&#x27;</span>,<span class="hljs-string">&#x27;评分&#x27;</span>,<span class="hljs-string">&#x27;参评人数&#x27;</span>,<span class="hljs-string">&#x27;简短影评&#x27;</span>])<br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;e&#x27;</span>)<br>        write_csv = csv.writer(write_to_csv)<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">for</span> movie <span class="hljs-keyword">in</span> self.movieList:<br>                write_csv.writerow([<br>                    movie[<span class="hljs-number">0</span>],<br>                    movie[<span class="hljs-number">1</span>],<br>                    movie[<span class="hljs-number">2</span>],<br>                    movie[<span class="hljs-number">3</span>],<br>                    movie[<span class="hljs-number">4</span>],<br>                    movie[<span class="hljs-number">5</span>],<br>                    movie[<span class="hljs-number">6</span>],<br>                    movie[<span class="hljs-number">7</span>],<br>                    movie[<span class="hljs-number">8</span>],<br>                    movie[<span class="hljs-number">9</span>]<br>                ])<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;成功写入.csv文件&#x27;</span>)<br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            <span class="hljs-built_in">print</span>(e)<br>        <span class="hljs-keyword">finally</span>:<br>            write_into_csv.close()<br></code></pre></td></tr></table></figure><h4 id="2-2-插入数据库"><a href="#2-2-插入数据库" class="headerlink" title="2.2 插入数据库"></a>2.2 插入数据库</h4><p>连接MySQL数据库，并运行此SQL脚本，即可生成表<strong>douban_top250</strong>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CREATE TABLE douban_top250(<br>    ID int PRIMARY KEY AUTO_INCREMENT,<br>    rankey int,<br>    name varchar(50),<br>    alias varchar(100),<br>    director varchar(50),<br>    showYear varchar(50),<br>    makeCountry varchar(50),<br>    movieType varchar(50),<br>    movieScore float,<br>    scoreNum int,<br>    shortFilm varchar(255)<br>)ENGINE=InnoDB DEFAULT CHARSET=utf8;<br></code></pre></td></tr></table></figure><p>定义<strong>insert_into_mysql</strong>方法，使用<strong>pymysql</strong>模块，将爬取到的数据上传到MySQL数据库中，实现数据的持久化。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">insert_into_mysql</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;连接数据库...&#x27;</span>)<br>        db = pymysql.connect(host=<span class="hljs-string">&#x27;&#x27;</span>, port=, user=<span class="hljs-string">&#x27;&#x27;</span>, passwd=<span class="hljs-string">&#x27;&#x27;</span>, db=<span class="hljs-string">&#x27;douban_top250&#x27;</span>,<br>                             charset=<span class="hljs-string">&#x27;utf8&#x27;</span>)<br>        cursor = db.cursor()<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;数据库连接成功...\n开始上传数据...&#x27;</span>)<br>        insertStr = <span class="hljs-string">&quot;INSERT INTO douban_top250(rankey, name, alias, director,&quot;</span> \<br>                    <span class="hljs-string">&quot;showYear, makeCountry, movieType, movieScore, scoreNum, shortFilm)&quot;</span> \<br>                    <span class="hljs-string">&quot;VALUES (%d, &#x27;%s&#x27;, &#x27;%s&#x27;, &#x27;%s&#x27;, &#x27;%s&#x27;, &#x27;%s&#x27;, &#x27;%s&#x27;, %f, %d, &#x27;%s&#x27;)&quot;</span><br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">for</span> movie <span class="hljs-keyword">in</span> self.movieList:<br>                insertSQL = insertStr % (<span class="hljs-built_in">int</span>(movie[<span class="hljs-number">0</span>]), <span class="hljs-built_in">str</span>(movie[<span class="hljs-number">1</span>]), <span class="hljs-built_in">str</span>(movie[<span class="hljs-number">2</span>]), <span class="hljs-built_in">str</span>(movie[<span class="hljs-number">3</span>]),<span class="hljs-built_in">str</span>(movie[<span class="hljs-number">4</span>]), <span class="hljs-built_in">str</span>(movie[<span class="hljs-number">5</span>]), <span class="hljs-built_in">str</span>(movie[<span class="hljs-number">6</span>]), <span class="hljs-built_in">float</span>(movie[<span class="hljs-number">7</span>]),                                     <span class="hljs-built_in">int</span>(movie[<span class="hljs-number">8</span>]), <span class="hljs-built_in">str</span>(movie[<span class="hljs-number">9</span>]))<br>                cursor.execute(insertSQL)<br>            db.commit()<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;上传成功...&#x27;</span>)<br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            <span class="hljs-built_in">print</span>(e)<br>            db.rollback()<br>        <span class="hljs-keyword">finally</span>:<br>            db.close()<br></code></pre></td></tr></table></figure><p>完善此爬虫程序，执行即可抓取豆瓣电影Top250影评数据并实现数据持久化。</p><h2 id="三、数据分析"><a href="#三、数据分析" class="headerlink" title="三、数据分析"></a>三、数据分析</h2><h4 id="1-数据清洗"><a href="#1-数据清洗" class="headerlink" title="1.数据清洗"></a>1.数据清洗</h4><h5 id="1-1-预览数据"><a href="#1-1-预览数据" class="headerlink" title="1.1 预览数据"></a>1.1 预览数据</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 查看数据基本信息</span><br>df = pd.read_csv(<span class="hljs-string">&#x27;douban_top250.csv&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8-sig&#x27;</span>)<br>df.head()<br>df.info()<br></code></pre></td></tr></table></figure><h5 id="1-2-重复值检查"><a href="#1-2-重复值检查" class="headerlink" title="1.2 重复值检查"></a>1.2 重复值检查</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">count=df.duplicated().value_counts()<br><span class="hljs-built_in">print</span>(count)<br></code></pre></td></tr></table></figure><h4 id="2-数据可视化"><a href="#2-数据可视化" class="headerlink" title="2.数据可视化"></a>2.数据可视化</h4><h5 id="2-1-电影制作国家-x2F-地区分析"><a href="#2-1-电影制作国家-x2F-地区分析" class="headerlink" title="2.1 电影制作国家&#x2F;地区分析"></a>2.1 电影制作国家&#x2F;地区分析</h5><p>有些电影由多个国家或地区参与制作。对于这种情况，可以采用split方法对每一项国家或地区数据进行切割，并将空值NaN替换为”0”，先按列计数，再按行汇总，由此统计数量。使用<strong>matplotlib.pyplot</strong>工具绘制排名统计直方图，使用<strong>wordcloud</strong>模块绘制词云图。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 国家地区排名</span><br>area_split = df[<span class="hljs-string">&#x27;制作国家/地区&#x27;</span>].<span class="hljs-built_in">str</span>.split(<span class="hljs-string">&#x27; &#x27;</span>).apply(pd.Series)<br>all_country = area_split.apply(pd.value_counts).fillna(<span class="hljs-string">&#x27;0&#x27;</span>)<br>all_country.columns = [<span class="hljs-string">&#x27;area1&#x27;</span>, <span class="hljs-string">&#x27;area2&#x27;</span>, <span class="hljs-string">&#x27;area3&#x27;</span>, <span class="hljs-string">&#x27;area4&#x27;</span>, <span class="hljs-string">&#x27;area5&#x27;</span>, <span class="hljs-string">&#x27;area6&#x27;</span>]<br>all_country[<span class="hljs-string">&#x27;area1&#x27;</span>] = all_country[<span class="hljs-string">&#x27;area1&#x27;</span>].astype(<span class="hljs-built_in">int</span>)<br>all_country[<span class="hljs-string">&#x27;area2&#x27;</span>] = all_country[<span class="hljs-string">&#x27;area2&#x27;</span>].astype(<span class="hljs-built_in">int</span>)<br>all_country[<span class="hljs-string">&#x27;area3&#x27;</span>] = all_country[<span class="hljs-string">&#x27;area3&#x27;</span>].astype(<span class="hljs-built_in">int</span>)<br>all_country[<span class="hljs-string">&#x27;area4&#x27;</span>] = all_country[<span class="hljs-string">&#x27;area4&#x27;</span>].astype(<span class="hljs-built_in">int</span>)<br>all_country[<span class="hljs-string">&#x27;area5&#x27;</span>] = all_country[<span class="hljs-string">&#x27;area5&#x27;</span>].astype(<span class="hljs-built_in">int</span>)<br>all_country[<span class="hljs-string">&#x27;area6&#x27;</span>] = all_country[<span class="hljs-string">&#x27;area6&#x27;</span>].astype(<span class="hljs-built_in">int</span>)<br>all_country[<span class="hljs-string">&#x27;all_counts&#x27;</span>] = all_country[<span class="hljs-string">&#x27;area1&#x27;</span>] + all_country[<span class="hljs-string">&#x27;area2&#x27;</span>] \<br>                            + all_country[<span class="hljs-string">&#x27;area3&#x27;</span>] + all_country[<span class="hljs-string">&#x27;area4&#x27;</span>] \<br>                            + all_country[<span class="hljs-string">&#x27;area5&#x27;</span>] + all_country[<span class="hljs-string">&#x27;area5&#x27;</span>]<br>all_country.sort_values([<span class="hljs-string">&#x27;all_counts&#x27;</span>], ascending=<span class="hljs-literal">False</span>)  <span class="hljs-comment"># 降序</span><br>country = pd.DataFrame(&#123;<span class="hljs-string">&#x27;制作国家/地区&#x27;</span>: all_country[<span class="hljs-string">&#x27;all_counts&#x27;</span>]&#125;)<br>country.sort_values(by=<span class="hljs-string">&#x27;制作国家/地区&#x27;</span>, ascending=<span class="hljs-literal">False</span>).plot(kind=<span class="hljs-string">&#x27;bar&#x27;</span>, figsize=(<span class="hljs-number">10</span>, <span class="hljs-number">7</span>))<br>plt.show()<br><span class="hljs-comment"># 绘制wordcloud</span><br>stopwords = <span class="hljs-built_in">set</span>(STOPWORDS)<br>stopwords.add(<span class="hljs-string">&quot;NaN&quot;</span>)<br>area_text = area_split.to_string(header=<span class="hljs-literal">False</span>, index=<span class="hljs-literal">False</span>)<br>WC_area = wordcloud.WordCloud(background_color=<span class="hljs-string">&#x27;white&#x27;</span>,<br>                              scale=<span class="hljs-number">1.5</span>,<br>                              stopwords=stopwords,<br>                              prefer_horizontal=<span class="hljs-number">1</span><br>                              ).generate(area_text)<br>plt.imshow(WC_area)<br>plt.axis(<span class="hljs-string">&quot;off&quot;</span>)<br>plt.show()<br></code></pre></td></tr></table></figure><p>绘制结果如下：<img src="https://pic-1252881216.cos.ap-beijing.myqcloud.com/douban_top_250/movie_area.png" alt="https://pic-1252881216.cos.ap-beijing.myqcloud.com/douban_top_250/movie_area.png"><img src="https://pic-1252881216.cos.ap-beijing.myqcloud.com/douban_top_250/wc_movie_area.png" alt="https://pic-1252881216.cos.ap-beijing.myqcloud.com/douban_top_250/wc_movie_area.png"></p><p>由数据可以看出，上榜数最多的国家是美国，中国大陆排名第六。</p><h5 id="2-2-电影类型分析"><a href="#2-2-电影类型分析" class="headerlink" title="2.2 电影类型分析"></a>2.2 电影类型分析</h5><p>有些电影属于多种类型。比如排在第一位的《肖申克的救赎》既属于犯罪片也属于剧情片，而排在第二位的《霸王别姬》既属于剧情片又属于爱情片与同性片。对于这种情况，采用split方法对每一项国家或地区数据进行切割，并将空值NaN替换为”0”，先按列计数，再按行汇总，由此统计数量。使用<strong>matplotlib.pyplot</strong>模块绘制电影类型统计直方图，使用<strong>wordcloud</strong>模块绘制词云图。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 电影类型统计</span><br>all_type = df[<span class="hljs-string">&#x27;电影类别&#x27;</span>].<span class="hljs-built_in">str</span>.split(<span class="hljs-string">&#x27; &#x27;</span>).apply(pd.Series)<br>type_text = all_type.to_string(header=<span class="hljs-literal">False</span>, index=<span class="hljs-literal">False</span>)<br>all_type = all_type.apply(pd.value_counts).fillna(<span class="hljs-string">&#x27;0&#x27;</span>)<br>all_type.columns = [<span class="hljs-string">&#x27;type1&#x27;</span>, <span class="hljs-string">&#x27;type2&#x27;</span>, <span class="hljs-string">&#x27;type3&#x27;</span>, <span class="hljs-string">&#x27;type4&#x27;</span>, <span class="hljs-string">&#x27;type5&#x27;</span>]<br>all_type[<span class="hljs-string">&#x27;type1&#x27;</span>] = all_type[<span class="hljs-string">&#x27;type1&#x27;</span>].astype(<span class="hljs-built_in">int</span>)<br>all_type[<span class="hljs-string">&#x27;type2&#x27;</span>] = all_type[<span class="hljs-string">&#x27;type2&#x27;</span>].astype(<span class="hljs-built_in">int</span>)<br>all_type[<span class="hljs-string">&#x27;type3&#x27;</span>] = all_type[<span class="hljs-string">&#x27;type3&#x27;</span>].astype(<span class="hljs-built_in">int</span>)<br>all_type[<span class="hljs-string">&#x27;type4&#x27;</span>] = all_type[<span class="hljs-string">&#x27;type4&#x27;</span>].astype(<span class="hljs-built_in">int</span>)<br>all_type[<span class="hljs-string">&#x27;type5&#x27;</span>] = all_type[<span class="hljs-string">&#x27;type5&#x27;</span>].astype(<span class="hljs-built_in">int</span>)<br>all_type[<span class="hljs-string">&#x27;all_counts&#x27;</span>] = all_type[<span class="hljs-string">&#x27;type1&#x27;</span>] + all_type[<span class="hljs-string">&#x27;type2&#x27;</span>] \<br>                         + all_type[<span class="hljs-string">&#x27;type3&#x27;</span>] + all_type[<span class="hljs-string">&#x27;type4&#x27;</span>] + all_type[<span class="hljs-string">&#x27;type5&#x27;</span>]<br> <br>all_type = all_type.sort_values([<span class="hljs-string">&#x27;all_counts&#x27;</span>], ascending=<span class="hljs-literal">False</span>)<br>movie_type = pd.DataFrame(&#123;<span class="hljs-string">&#x27;数量&#x27;</span>: all_type[<span class="hljs-string">&#x27;all_counts&#x27;</span>]&#125;)<br><span class="hljs-built_in">print</span>(movie_type)<br>movie_type.sort_values(by=<span class="hljs-string">&#x27;数量&#x27;</span>, ascending=<span class="hljs-literal">False</span>).plot(kind=<span class="hljs-string">&#x27;bar&#x27;</span>, figsize=(<span class="hljs-number">13</span>, <span class="hljs-number">6</span>))<br>plt.show()<br><span class="hljs-comment"># 绘制wordcloud</span><br>stopwords = <span class="hljs-built_in">set</span>(STOPWORDS)<br>stopwords.add(<span class="hljs-string">&quot;NaN&quot;</span>)<br>WC_type = wordcloud.WordCloud(background_color=<span class="hljs-string">&#x27;white&#x27;</span>,<br>                              scale=<span class="hljs-number">1.5</span>,<br>                              stopwords=stopwords,<br>                              collocations=<span class="hljs-literal">False</span>,<br>                              prefer_horizontal=<span class="hljs-number">1</span><br>                              ).generate(type_text)<br>plt.imshow(WC_type)<br>plt.axis(<span class="hljs-string">&quot;off&quot;</span>)<br>plt.show()<br></code></pre></td></tr></table></figure><p>绘制结果如下：<img src="https://pic-1252881216.cos.ap-beijing.myqcloud.com/douban_top_250/movie_type.png" alt="https://pic-1252881216.cos.ap-beijing.myqcloud.com/douban_top_250/movie_type.png"><img src="https://pic-1252881216.cos.ap-beijing.myqcloud.com/douban_top_250/wc_movie_type.png" alt="https://pic-1252881216.cos.ap-beijing.myqcloud.com/douban_top_250/wc_movie_type.png"></p><p>由数据图可以明显看出，剧情片的上榜比例远远超过其他类型，而情色片、运动片等类型上榜数较少。</p><h5 id="2-3-导演上榜次数分析"><a href="#2-3-导演上榜次数分析" class="headerlink" title="2.3 导演上榜次数分析"></a>2.3 导演上榜次数分析</h5><p>使用<strong>pandas</strong>模块提取数据，使用<strong>wordcloud</strong>模块绘制词云图。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 导演上榜次数</span><br>director = df[<span class="hljs-string">&#x27;导演&#x27;</span>].value_counts()<br>myDirector = pd.DataFrame(&#123;<span class="hljs-string">&#x27;name&#x27;</span>:director.index,<span class="hljs-string">&#x27;counts&#x27;</span>:director.values&#125;)<br><span class="hljs-built_in">print</span>(myDirector)<br><span class="hljs-comment"># 绘制wordcloud</span><br>Director=df[<span class="hljs-string">&#x27;导演&#x27;</span>].<span class="hljs-built_in">str</span>.split(<span class="hljs-string">&#x27; &#x27;</span>).apply(pd.Series)<br>stopwords = <span class="hljs-built_in">set</span>(STOPWORDS)<br>stopwords.add(<span class="hljs-string">&quot;NaN&quot;</span>)<br>director_text = Director.to_string(header=<span class="hljs-literal">False</span>, index=<span class="hljs-literal">False</span>)<br>WC_director= wordcloud.WordCloud(background_color=<span class="hljs-string">&#x27;white&#x27;</span>,<br>                              scale=<span class="hljs-number">1.5</span>,<br>                              stopwords=stopwords,<br>                              prefer_horizontal=<span class="hljs-number">1</span><br>                              ).generate(director_text)<br>plt.imshow(WC_director)<br>plt.axis(<span class="hljs-string">&quot;off&quot;</span>)<br>plt.show()<br></code></pre></td></tr></table></figure><p>绘制结果如下：</p><p><img src="https://pic-1252881216.cos.ap-beijing.myqcloud.com/douban_top_250/movie_director.png" alt="https://pic-1252881216.cos.ap-beijing.myqcloud.com/douban_top_250/movie_director.png"></p><p><img src="https://pic-1252881216.cos.ap-beijing.myqcloud.com/douban_top_250/wc_director.png" alt="https://pic-1252881216.cos.ap-beijing.myqcloud.com/douban_top_250/wc_director.png"></p><p>排在前几名的都是耳熟能详的导演，如斯皮尔伯格、克里斯托弗诺兰与宫崎骏，上榜数量都为7部，而华人导演王家卫上榜数量为5部。  </p><h5 id="2-4-评分与排名关系分析"><a href="#2-4-评分与排名关系分析" class="headerlink" title="2.4 评分与排名关系分析"></a>2.4 评分与排名关系分析</h5><p>使用<strong>pandas</strong>模块提取数据，使用<strong>matplotlib.pyplot</strong>模块绘制评分和排名关系散点图以及电影评分的分布图。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 评分和排名的关系散点图</span><br>plt.figure(figsize=(<span class="hljs-number">14</span>, <span class="hljs-number">6</span>))<br>plt.subplot(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>)<br>plt.scatter(df[<span class="hljs-string">&#x27;评分&#x27;</span>], df[<span class="hljs-string">&#x27;电影排名&#x27;</span>])<br>plt.xlabel(<span class="hljs-string">&#x27;评分&#x27;</span>)<br>plt.ylabel(<span class="hljs-string">&#x27;电影排名&#x27;</span>)<br>plt.gca().invert_yaxis()<br><span class="hljs-comment"># 评分数量直方图</span><br>plt.subplot(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>)<br>plt.hist(df[<span class="hljs-string">&#x27;评分&#x27;</span>], bins=<span class="hljs-number">14</span>)<br>plt.xlabel(<span class="hljs-string">&#x27;评分&#x27;</span>)<br>plt.ylabel(<span class="hljs-string">&#x27;出现次数&#x27;</span>)<br>plt.show()<br></code></pre></td></tr></table></figure><p>绘制结果如下：<img src="https://pic-1252881216.cos.ap-beijing.myqcloud.com/douban_top_250/movie_score_number.png" alt="https://pic-1252881216.cos.ap-beijing.myqcloud.com/douban_top_250/movie_score_number.png"></p><p>由上图可以看出，电影的评分大多是集中在8.5-9.4之间。  </p><h5 id="2-5-评分与参评人数关系分析"><a href="#2-5-评分与参评人数关系分析" class="headerlink" title="2.5 评分与参评人数关系分析"></a>2.5 评分与参评人数关系分析</h5><p>使用<strong>pandas</strong>模块提取数据，使用<strong>matplotlib.pyplot</strong>模块绘制参评人数与电影排名关系散点图以及参评人数频次图。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 评分与评价人数的关系散点图</span><br>plt.figure(figsize=(<span class="hljs-number">14</span>, <span class="hljs-number">6</span>))<br>plt.subplot(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>)<br>plt.scatter(df[<span class="hljs-string">&#x27;参评人数&#x27;</span>], df[<span class="hljs-string">&#x27;电影排名&#x27;</span>])<br>plt.xlabel(<span class="hljs-string">&#x27;参评人数&#x27;</span>)<br>plt.ylabel(<span class="hljs-string">&#x27;电影排名&#x27;</span>)<br>plt.gca().invert_yaxis()<br><span class="hljs-comment"># 评价人数直方图</span><br>plt.subplot(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>)<br>plt.hist(df[<span class="hljs-string">&#x27;参评人数&#x27;</span>], bins=<span class="hljs-number">14</span>)<br>plt.xlabel(<span class="hljs-string">&#x27;参评人数&#x27;</span>)<br>plt.ylabel(<span class="hljs-string">&#x27;出现次数&#x27;</span>)<br>plt.show()<br></code></pre></td></tr></table></figure><p>绘制结果如下：</p><p><img src="https://pic-1252881216.cos.ap-beijing.myqcloud.com/douban_top_250/movie_review_number.png" alt="https://pic-1252881216.cos.ap-beijing.myqcloud.com/douban_top_250/movie_review_number.png"></p><p>由统计图可以看出，电影排名与其参评人数基本呈正相关趋势，且参评人数主要分布在350000-900000人之间。</p><h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><p>综上分析，可以看出，中国观众对于电影的类型更认可剧情片和爱情片；对于电影的生产国家，更认可具有强大电影工业体系的美国；而对于该榜单中的电影而言，好电影会吸引更多的人来评价，而评价人数多的电影，质量也确实不错。或许榜单的意义就在于：让真正的好电影能通过排名，吸引更多人观看评价。</p>]]></content>
    
    
    <categories>
      
      <category>data_analysis</category>
      
      <category>spider</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python 数据分析 爬虫</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2019/07/15/hello-world/"/>
    <url>/2019/07/15/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>about</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>404</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
</search>
